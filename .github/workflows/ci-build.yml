name: CI Build

on:
  - push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [11]
    env:
      DEFAULT_JAVA: 11

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-java-${{ matrix.java }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-java-${{ matrix.java }}-maven-

      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-java-${{ matrix.java }}-sonar
          restore-keys: ${{ runner.os }}-java-${{ matrix.java }}-sonar

      - name: Run tests and build with Maven
        run: mvn --batch-mode --update-snapshots clean verify -DtrimStackTrace=false
      
      - name: Publish Test Report for Java ${{ matrix.java }}
        uses: scacap/action-surefire-report@v1
        if:  ${{ always() }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Sonar analysis
        if: ${{ env.DEFAULT_JAVA == matrix.java && env.SONAR_TOKEN != null }}
        run: mvn --batch-mode sonar:sonar -DtrimStackTrace=false \
                 -Dsonar.organization=exasol -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}